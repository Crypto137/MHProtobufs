syntax = "proto2";

package Gazillion;

import "ChatCommon.proto";
import "CommonMessages.proto";

enum ChatBanVoteResponseCode {
	CHAT_BAN_VOTE_SUCCESS	= 0;
	CHAT_BAN_VOTE_ERROR	= 1;
	CHAT_BAN_VOTE_ALREADY_BANNED	= 2;
	CHAT_BAN_VOTE_ALREADY_VOTED	= 3;
	CHAT_BAN_VOTE_NOT_ALLOWED	= 4;
	CHAT_BAN_VOTE_BANNED	= 5;
	CHAT_BAN_VOTE_INVALID_TARGET	= 6;
	CHAT_BAN_VOTE_NUM_CODES	= 7;
}

message ChatResponseToExternalLogin {
	optional bytes	someresponse	= 1;
}

message ChatNormalMessage {
	required ChatRoomTypes	roomType	= 1;
	required string	fromPlayerName	= 2;
	required ChatMessage	theMessage	= 3;
	optional int32	prestigeLevel	= 4;
	optional uint64	consoleAccountId	= 5;
}

message ChatTellMessage {
	required string	fromPlayerName	= 1;
	required ChatMessage	theMessage	= 2;
	optional int32	prestigeLevel	= 3;
	optional uint64	consoleAccountId	= 4;
}

message ChatBroadcastMessage {
	required ChatRoomTypes	roomType	= 1;
	required string	fromPlayerName	= 2;
	required ChatMessage	theMessage	= 3;
	optional int32	prestigeLevel	= 4;
	optional uint64	consoleAccountId	= 5;
}

message ChatErrorMessage {
	required ChatErrorMessages	errorMessage	= 1;
}

message ChatBanVoteResponse {
	required string	targetPlayerName	= 1;
	required ChatBanVoteResponseCode	responseCode	= 2;
}

message ChatCreateChatRoomResult {
	required uint64	requestingGameId	= 3;
	optional bool	success	= 1 [default = false];
	optional string	reason	= 2;
}

message ChatAddPlayerToRoomResult {
	required uint64	requestingGameId	= 3;
	optional bool	success	= 1 [default = false];
	optional string	reason	= 2;
}

message ChatScrubTextResult {
	required uint64	requestingGameId	= 1;
	required string	textOriginal	= 2;
	required string	textScrubbed	= 3;
	required uint64	remoteJobId	= 4;
}

message ChatServerNotification {
	required string	theMessage	= 1;
}

message ChatClientIsLoggedIn {
	required uint64	requestingGameId	= 1;
	required uint64	playerDbId	= 2;
}

